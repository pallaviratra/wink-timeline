/* eslint-disable no-sync */


var makeRegexes = function ( config ) {
  var rgx = [];
  var imax = config.length;
  var i;

  for ( i = 0; i < imax; i += 1 ) {
    rgx.push( [ ( new RegExp( config[ i ][ 0 ], config[ i ][ 1 ] ) ), config[ i ][ 2 ] ] );
  }
  return rgx;
}; // makeRegexes()

var compileTRex =  function ( trex ) {
  var rtc;
  var ltc;
  var helpers = Object.create( null );

  try {
    rtc = makeRegexes( trex.rtc );

    ltc = makeRegexes( trex.ltc );

    // Helper regexes.
    for ( const h in trex.helpers ) { // eslint-disable-line guard-for-in
      helpers[ h ] = new RegExp( trex.helpers[ h ][ 0 ], trex.helpers[ h ][ 1 ] );
    }

    // file = path.join( __dirname, 'languages', language, 'normalization-map.json' );
    // nmap = JSON.parse( fs.readFileSync( file, 'utf8' ) );
  } catch ( ex ) {
    throw Error( 'wink-nlp: Invalid trex.\n\nDetails:\n' + ex.message );
  }
  return  { rtc: rtc, ltc: ltc, helpers: helpers };
}; // readLangConfig()

module.exports = compileTRex;
